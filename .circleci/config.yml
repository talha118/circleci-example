version: 2.1
general:
  branches:
    only:
      - master
orbs:
  aws-cli: circleci/aws-cli@0.1.16
jobs:
  build_test:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: npm install
          command: |
            npm install
      - run:
          name: run tests
          command: |
            npm test
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "67:02:50:27:32:6c:a1:e1:25:3f:0d:72:e5:2d:2c:7e"
      - aws-cli/setup:
          profile-name: approcket
      - run:
          name: Deploy
          command: |
            PUBLIC_IP=$(curl ipinfo.io/ip)
            AWS_REGION=eu-central-1
            SG_ID=sg-07a5adc398dcb56b4
            aws ec2 authorize-security-group-ingress --group-id sg-07a5adc398dcb56b4 \
              --protocol tcp --port 22 --cidr $(curl ipinfo.io/ip)/24
            sleep 5
            EC2_USERNAME=ubuntu
            EC2_PUBLIC_DNS=ec2-35-158-2-108.eu-central-1.compute.amazonaws.com
            ssh ${EC2_USERNAME}@${EC2_PUBLIC_DNS} \<< EOF
              if [ -d "/home/ubuntu/example" ]; then rm -Rf ~/example; fi
            EOF
            scp -r /home/circleci/project ${EC2_USERNAME}@${EC2_PUBLIC_DNS}:/home/ubuntu/example/
            ssh ${EC2_USERNAME}@${EC2_PUBLIC_DNS} \<< EOF
              pm2 stop all
              cd ~/example
              npm i
              pm2 start server.js
            EOF
            aws ec2 revoke-security-group-ingress --region $AWS_REGION --group-id $SG_ID \
                  --protocol tcp --port 22 --cidr $PUBLIC_IP/24
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_test
      - build:
          requires:
            - build_test